class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        long long int ans=0;
        if(root==NULL)return 0;
        
        queue<pair<TreeNode*,long long>> q;
        q.push({root,0});

        while(!q.empty()){
            int sz = q.size();
            long long int mini = q.front().second;
            long long int first,last;
            for(int  i =0;i<sz;i++){
                long long cur_idx = q.front().second-mini;
                TreeNode * cur = q.front().first;
                q.pop();
                if(i==0)first = cur_idx;
                if(i==sz-1)last = cur_idx;

                if(cur->left){
                    q.push({cur->left,2*cur_idx+1});
                }
                if(cur->right){
                    q.push({cur->right,2*cur_idx+2});
                }
            } 
            ans = max(ans,last-first+1);           
        }
        return ans;
    }
};
